name: 'Setup python amazon linux'
description: 'setup-python action for amazon linux self hosted runners'
inputs:
  python-version:
    description: 'Version of python to be installed. Reads from .python-version if unset.'
  python-version-file:
    description: 'Version of python to be installed'
    default: '.python-version'
  cache:
    description: >
      [Deprecated] Used to specify whether caching is needed. Set to true, if you'd like to enable caching.
      Current implementation uses uv which pulls in pre-compiled binaries of python thereby eliminating the
      need to cache compiled python artifacts.
    default: 'true'

runs:
  using: "composite"
  steps:
    - name: Ensure system dependencies are installed
      shell: bash
      run: |
        sudo yum install -y tar gzip which

    - name: Install uv
      shell: bash
      run: |
        installation_directory="${HOME}/.setup-python-amazon-linux/uv"
        echo "Installing uv.. installation_directory=${installation_directory}"
        curl -LsSf https://astral.sh/uv/install.sh | env UV_UNMANAGED_INSTALL="${installation_directory}" sh
        echo "${installation_directory}" >> "${GITHUB_PATH}"

    - name: Find desired python version
      id: find-desired-python-version
      shell: bash
      run: |
        desired_python_version=$(${GITHUB_ACTION_PATH}/find-desired-python-version.sh "${{ inputs.python-version }}" "${{ inputs.python-version-file }}")
        echo "desired_python_version=${desired_python_version}" | tee -a "${GITHUB_OUTPUT}"

    - name: Set installation directory
      id: set-installation-directory
      shell: bash
      run: |
        desired_python_version="${{ steps.find-desired-python-version.outputs.desired_python_version }}"
        echo "installation_directory=${HOME}/.setup-python-amazon-linux/.python-versions/${desired_python_version}" | tee -a "${GITHUB_OUTPUT}"

    - id: setup-python
      shell: bash
      run: |
        installation_directory="${{ steps.set-installation-directory.outputs.installation_directory }}"
        desired_python_version="${{ steps.find-desired-python-version.outputs.desired_python_version }}"

        uv venv --python "${desired_python_version}" "${installation_directory}"

    - name: Add python to PATH
      shell: bash
      run: |
        installation_directory="${{ steps.set-installation-directory.outputs.installation_directory }}"
        echo "${installation_directory}/bin" >> "${GITHUB_PATH}"

        echo "The following python binaries are now available in the PATH"
        ls "${installation_directory}/bin"

    - name: Install pip
      shell: bash
      run: |
        installation_directory="${{ steps.set-installation-directory.outputs.installation_directory }}"

        python -m ensurepip --upgrade
        ln -sf "${installation_directory}/bin/pip3" "${installation_directory}/bin/pip"
        pip install --upgrade pip

branding:
  icon: 'code'
  color: 'yellow'
